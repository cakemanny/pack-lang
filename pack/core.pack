(ns pack.core)

(import pack.interp)
(def eval (. pack.interp rt_eval))
(def apply (. pack.interp rt_apply))

;; Data structures
(def list (fn [& elems] elems))
(def vector (fn [& elems] ((. (. pack.interp Vec) from_iter) elems)))


;; Logic
(def not (fn [x] (if x false true)))

(import operator)
;; Arithmatic
(def + (. operator add))
(def - (. operator sub))
(def * (. operator mul))
(def / (. operator truediv))

;; vim:ft=clojure:
